env:
  global:
    # directory containing the project source
    - REPO_DIR=.
    # pip dependencies to _build_ project
    - BUILD_DEPENDS=
    # pip dependencies to _test_ project
    - TEST_DEPENDS="tox"
    - PLAT=x86_64
    - UNICODE_WIDTH=32
    # encrypted credentials for uploading packages to PyPI using twine
    - TWINE_USERNAME="anthrotype"
    - secure: UHQZfyYH2TyY35Nhg78TzgKr4lfTYkPYsglM5PejBdALx/pukcyHkBH5qXYlfppYYG1bpVQlsZ1cZ7fBJS9mdNxrEpcWAHybCKSRFkCKark8ansQw68mE7pQdtMMgtj26+MeJZnSko9bg8yp8J8odJju9vxYOQpRzI8WgSeXh9hK6glgAV4QU3Q61zJcOaximPnuZ5jp1CN/l5DFv3NZoZvXZOocqEybjSinyhXsTWIr311GUnfoJEG1t88z7aEpi/vzhlYGvC14d3XXhGcAHPi5qkWuROY/Qb+BwZJb5KryxPo7+Hm8Kph0NcsMxFCDl2MpruxVAtNiQ4qcibNzF0LIREqyYTvGvrafNPp+eDE1DKqoDRSiX4BFlhNZXa3Z3rI0xfRSwBNO2Eb7H/v7+D/BkeP5WgMuA8EEcHELmHbJg0Y9xwkTqLEqy3Mi+PgGuBKOOq8wy9binsN4OmZwhNKNV908jl16ErDzoDm+B1iQbtJbkzmQOMLNo7lPQ3p55ZYqfIqXYT9/yGa4do+eTyRLx8bmUqzN8tFA6iXuxabAMpRuOjhUUglM5K6iaH8iqLapkUCLbleQvG39eZGoPCfukIOLLGf7aNaCa1ZWzOKz6+g8oQJyGhGKEj3apd8+uvvjh1u3Jzi+9ChN0Yq4wb9X4EU1p1xS5Wd/76NFDgk=

language: generic
dist: xenial
services: docker

matrix:
  include:
    # PyPy is not supported yet by multibuild and the manylinux1 container,
    # thus we install PyPy ourselves and run the tests, but don't upload any
    # wheel to Github/PyPy, as they won't be portable across distros.
    # We use pyenv to install the current pypy, as Travis version is outdated
    - os: linux
      env:
        - PYPY_VERSION=5.6.0
        - TOXENV=pypy
        - SKIP_DEPLOY=true
    - os: linux
      env: MB_PYTHON_VERSION=2.7
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - UNICODE_WIDTH=16
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=2.7
        - PLAT=i686
        - UNICODE_WIDTH=16
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.5
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.5
        - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6
        - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.7
        - BUILD_SDIST=true
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.7
        - PLAT=i686
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.8
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.8
        - PLAT=i686
    - os: osx
      env:
        - MB_PYTHON_VERSION=2.7
    - os: osx
      env:
        - MB_PYTHON_VERSION=3.5
    - os: osx
      env:
        - MB_PYTHON_VERSION=3.6
    - os: osx
      env:
        - MB_PYTHON_VERSION=3.7
    - os: osx
      env:
        - MB_PYTHON_VERSION=3.8

before_install:
  - source multibuild/common_utils.sh
  - source multibuild/travis_steps.sh
  - before_install

install:
  - build_wheel $REPO_DIR $PLAT

script:
  - install_run $PLAT

after_success:
  # if tagged commit, create the source distribution for the deploy stage, and
  # copy the wheel to dist/ where we can upload both to PyPI/Github
  - |
    if [ -n "$TRAVIS_TAG" ] && [ "$TRAVIS_REPO_SLUG" == "obp/py-zopfli" ] && [ "$SKIP_DEPLOY" != true ]; then
        pip install --upgrade pip
        pip install --upgrade twine
        twine upload wheelhouse/*.whl
        if [ "$BUILD_SDIST" == true ]; then
            pip install --upgrade setuptools
            python setup.py sdist
            twine upload dist/*.zip
        fi
    fi
